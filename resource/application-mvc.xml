<?xml version="1.0" encoding="UTF-8" ?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:util="http://www.springframework.org/schema/util" 
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.2.xsd 
http://www.springframework.org/schema/util 
http://www.springframework.org/schema/util/spring-util-4.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd" >
 
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	     <property name="messageConverters">
	         <list>
	             <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                 <property name="supportedMediaTypes">
	                     <list>
	                         <value>text/html; charset=UTF-8</value>
	                         <value>application/json;charset=UTF-8</value>
	                     </list>
	                 </property>
	             </bean>
	             <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                 <property name="supportedMediaTypes">
	                     <list>
	                         <value>text/html; charset=UTF-8</value>
	                         <value>application/json;charset=UTF-8</value>
	                     </list>
	                 </property>
	                 <property name="objectMapper">
		                <bean class="com.fasterxml.jackson.databind.ObjectMapper">
		                    <property name="dateFormat">
		                        <bean class="java.text.SimpleDateFormat">
		                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
		                        </bean>
		                    </property>
		                </bean>
	            	</property>
	             </bean>
	         </list>
	     </property>
	 </bean>
 	
	 <!-- 开启注解模式驱动 --> 
	 <mvc:annotation-driven></mvc:annotation-driven>

	  
	 <!-- 扫包 --> 
	 <context:component-scan base-package="com.wen">
	 </context:component-scan>
 
	 <!-- 静态资源过滤 --> 
	 <mvc:resources location="/style/" mapping="/style/**"/>
	 
	 <!-- swagger2 -->
	 <mvc:default-servlet-handler />
 
	 <!-- 视图渲染 jsp/freemaker/velocity--> 
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
	 	<!-- 制定页面存放的路径 --> 
	 	<property name="prefix" value="/WEB-INF/jsp/"></property>
	 	 <!-- 文件的后缀 --> 
	 	 <property name="suffix" value=".jsp"></property> 
	 </bean>
 
	 <!-- 上传文件的设置 ，maxUploadSize=-1，表示无穷大。uploadTempDir为上传的临时目录 --> 
	 <bean id="multipartResolver" 
	          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	     <!-- 设置上传文件的最大尺寸为10MB 10*1024*1024 -->  
	     <property name="maxUploadSize">  
	        <value>10485760</value>  
	     </property>
	</bean>
	
	
	<!-- 自定义拦截器 -->
    <!-- 
    <mvc:interceptors>    
    	<mvc:interceptor>    
        	匹配的是url路径， 如果不配置或/**,将拦截所有的Controller   
        	<mvc:mapping path="/**" />	
        	<bean class="com.wen.config.JsonHandlerInterceptor"/>    
    	</mvc:interceptor>  
    	当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
   	</mvc:interceptors> 
     -->
 </beans> 